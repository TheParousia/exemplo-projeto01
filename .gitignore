# Created by https://www.toptal.com/developers/gitignore/api/dotnetcore,csharp
# Edit at https://www.toptal.com/developers/gitignore?templates=dotnetcore,csharp

### Csharp ###
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

<<<<<<< HEAD
# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/
=======
# Construir resultados de um projeto ATL
[Dd]ebugPS/
[Rr]soltaPS/
dlldata.c

# Resultados de referência
BenchmarkDotNet.Artifacts/

# .NET Núcleo
projeto.lock.json
project.fragment.lock.json
artefatos/
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

<<<<<<< HEAD
# Files built by Visual Studio
=======
# Arquivos criados pelo Visual Studio
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
<<<<<<< HEAD
*.log
*.tlog
*.vspscc
*.vssscc
.builds
=======
*.registro
*.tlog
*.vspscc
*.vssscc
.construções
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
*.pidb
*.svclog
*.scc

<<<<<<< HEAD
# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
=======
# Arquivos de teste Chutzpah
_Chutzpah*

# Arquivos de cache do Visual C++
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

<<<<<<< HEAD
# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
=======
# Criador de perfil do Visual Studio
*.psess
*.vsp
*.vspx
*.seiva

# Arquivos de rastreamento do Visual Studio
*.e2e

# Espaço de trabalho local do TFS 2012
$tf/

# Kit de ferramentas de automação de orientação
*.gpState

# ReSharper é um suplemento de codificação .NET
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

<<<<<<< HEAD
# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
=======
# TeamCity é um suplemento de compilação
_TeamCity*

# DotCover é uma ferramenta de cobertura de código
*.dotCover

# AxoCover é uma ferramenta de cobertura de código
.axoCover/*
!.axoCover/settings.json

# Coverlet é uma ferramenta de cobertura de código multiplataforma gratuita
cobertura*.json
cobertura*.xml
cobertura*.info

# Resultados da cobertura de código do Visual Studio
*.cobertura
*.coveragexml

# N Crunch
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

<<<<<<< HEAD
# MightyMoose
*.mm.*
=======
#MightyMoose
*.milímetros.*
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

<<<<<<< HEAD
# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
=======
# Pasta de saída Installshield
[Ee]expresso/

# DocProject é um add-in gerador de documentação
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

<<<<<<< HEAD
# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
=======
# Diretório Click-Once
publicar/

# Publicar saída da Web
*.[Pp]ublish.xml
*.azurePubxml
# Nota: Comente a próxima linha se quiser verificar suas configurações de implantação da web,
# mas as strings de conexão do banco de dados (com possíveis senhas) serão descriptografadas
*.pubxml
*.publishproj

# Configurações de publicação do Microsoft Azure Web App. Comente a próxima linha se quiser
# verificando as configurações de publicação do aplicativo Web do Azure, mas as informações confidenciais contidas
# nestes scripts serão descriptografados
PublishScripts/

# Pacotes NuGet
*.nupkg
# Pacotes de símbolos NuGet
*.snupkg
# A pasta de pacotes pode ser ignorada por causa da restauração do pacote
**/[Pp]pacotes/*
# exceto build/, que é usado como um destino do MSBuild.
!**/[Pp]ackages/build/
# Descomente se necessário, mas geralmente ele será regenerado quando necessário
#!**/[Pp]ackages/repositories.config
# Os arquivos project.json do NuGet v3 produzem mais arquivos ignoráveis
*.nuget.props
*.nuget.targets

# Saída de compilação do Microsoft Azure
csx/
*.build.csdef

# Emulador do Microsoft Azure
ecf/
rcf/

# Diretórios e arquivos de pacotes de aplicativos da Windows Store
AppPackages/
Pacote de artefatos/
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

<<<<<<< HEAD
# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
=======
# Arquivos de cache do Visual Studio
# arquivos terminados em .cache podem ser ignorados
*.[Cc]dor
# mas rastreie os diretórios que terminam em .cache
!?*.[Cc]dor/

# Outros
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
<<<<<<< HEAD
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
=======
*.publicarconfigurações
orleans.codegen.cs

# Incluir arquivos de nome forte pode apresentar um risco de segurança
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Como existem vários fluxos de trabalho, remova o comentário da próxima linha para ignorar bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# Projetos RIA/Silverlight
Código_gerado/

# Arquivos de backup e relatório da conversão de um arquivo de projeto antigo
# para uma versão mais recente do Visual Studio. Arquivos de backup não são necessários,
# porque temos git ;-)
_UpgradeReport_Files/
Cópia de segurança*/
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

<<<<<<< HEAD
# SQL Server files
=======
# arquivos SQL Server
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
*.mdf
*.ldf
*.ndf

<<<<<<< HEAD
# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
=======
# Projetos de Business Intelligence
*.rdl.data
*.bim.layout
*.bim_*.configurações
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

<<<<<<< HEAD
# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files

# Visual Studio LightSwitch build output
=======
#Microsoft Falsificações
Montagens Falsas/

# Arquivo de configuração do plugin GhostDoc
*.GhostDoc.xml

# Ferramentas Node.js para Visual Studio
.ntvs_analysis.dat
node_modules/

# Registro de compilação do Visual Studio 6
*.plg

# Arquivo de opções do espaço de trabalho do Visual Studio 6
*.optar

# Arquivo de espaço de trabalho gerado automaticamente pelo Visual Studio 6 (contém quais arquivos foram abertos, etc.)
*.vbw

# Arquivo de projeto gerado automaticamente pelo Visual Studio 6 (contém quais arquivos foram abertos, etc.)
*.vbp

# Área de trabalho do Visual Studio 6 e arquivo de projeto (arquivos de projeto de trabalho contendo arquivos para incluir no projeto)
*.dsw
*.dsp

# Arquivos técnicos do Visual Studio 6

# Saída de compilação do Visual Studio LightSwitch
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

<<<<<<< HEAD
# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
=======
# Gerenciador de dependências de pacotes
.paket/paket.exe
arquivos-pacote/

#FAKE - F# Make
.falso/

# Configurações pessoais do CodeRush
.cr/pessoal

# Ferramentas Python para Visual Studio (PTVS)
__pycache__/
*.pyc

#Bolo - Descomente se estiver usando
# ferramentas/**
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
# !tools/packages.config

# Tabs Studio
*.tss

<<<<<<< HEAD
# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
=======
# Arquivo de configuração JustMock do Telerik
*.jmconfig

# Saída de compilação do BizTalk
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

<<<<<<< HEAD
# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
=======
# Resultados da análise da interface do usuário do OpenCover
OpenCover/

# Saída de execução local do Azure Stream Analytics
ASALocalRun/

# Log binário e estruturado do MSBuild
*.binlog

# Arquivo de configuração do depurador GPU NVidia Nsight
*.nvuser

# Pasta de trabalho MFractors (ferramenta de produtividade Xamarin)
.mfractor/

# Histórico local para Visual Studio
.localhistory/

# Arquivos de histórico do Visual Studio (VSHistory)
.vhistory/

# Banco de dados temporário de verificação de saúde do BeatPulse
healthchecksdb

# Pasta de backup para a ferramenta Package Reference Convert no Visual Studio 2017
MigraçãoBackup/

# Pasta de trabalho Ionide (ferramentas F# VS Code de plataforma cruzada)
.ionide/

# Fody - esquema XML gerado automaticamente
FodyWeavers.xsd

# Arquivos VS Code para quem trabalha com várias ferramentas
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

<<<<<<< HEAD
# Local History for Visual Studio Code
.history/

# Windows Installer files from build outputs
*.cab
=======
# Histórico local para código do Visual Studio
.história/

# Arquivos do Windows Installer de saídas de compilação
*.táxi
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
*.msi
*.msix
*.msm
*.msp

<<<<<<< HEAD
# JetBrains Rider
*.sln.iml

### DotnetCore ###
# .NET Core build folders
bin/
obj/

# Common node modules locations
/node_modules
/wwwroot/node_modules

# End of https://www.toptal.com/developers/gitignore/api/dotnetcore,csharp
=======
# Piloto JetBrains
*.sln.iml

### DotnetCore ###
# Pastas de compilação do .NET Core
caixa/
obj/

# Locais de módulos de nós comuns
/node_modules
/wwwroot/node_modules

# Fim de https://www.toptal.com/developers/gitignore/api/dotnetcore,csharp
>>>>>>> e6d153640bb1412f131f2a5cb98a8fea855fd1e7
